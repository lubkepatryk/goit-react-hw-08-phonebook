{"version":3,"file":"static/js/468.038e3d25.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/contacts/selectors.js","components/Filter/Filter.jsx","redux/contacts/operations.js","pages/Phonebook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactList_button__7kL4l\"};","import css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nexport const ContactList = ({ contacts, handleDelete }) => (\n  <ul>\n    {contacts.map((contact, id) => (\n      <li key={id}>\n        {contact.name} {contact.number}\n        <button\n          className={css.button}\n          type=\"button\"\n          onClick={() => handleDelete(contact.id)}\n        >\n          {' '}\n          Delete{' '}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"formButton\":\"ContactForm_formButton__TN6Jq\"};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/createAction';\nimport { nanoid } from 'nanoid';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChangeName = event => {\n    const value = event.target.value;\n    setName(value);\n  };\n\n  const handleChangeNumber = event => {\n    const value = event.target.value;\n    setNumber(value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    dispatch(addContact({ nameText: name, numberText: number }));\n    setName('');\n    setNumber('');\n  };\n\n  const loginNameId = nanoid();\n  const loginNumberId = nanoid();\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={handleFormSubmit}>\n        <label className={css.label} htmlFor={loginNameId}>\n          Name\n        </label>\n        <input\n          id={loginNameId}\n          onChange={handleChangeName}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label className={css.label} htmlFor={loginNumberId}>\n          {' '}\n          Number{' '}\n        </label>\n        <input\n          id={loginNumberId}\n          onChange={handleChangeNumber}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button className={css.formButton}>Add contact</button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","export const selectContacts = state => {\n    return state.contacts.items;\n  };\n  \n  export const selectFilter = state => {\n    return state.filter;\n  };\n\n  export const selectError = state => {\n    return state.contacts.error;\n  }\n\n  export const selectLoading = state => {\n    return state.contacts.isLoading;\n  }","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/createAction';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <label className={css.filterLabel}>Find contacts by Name </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const fetchContacts = createAsyncThunk(\n    \"contacts/fetchAll\",\n    async (_, thunkAPI) => {\n      try {\n        const response = await axios.get(\"/contacts\");\n     \n        return response.data;\n      } catch (err) {\n        return thunkAPI.rejectWithValue(err.message);\n      }\n    }\n  );\n\n  export const addContact = createAsyncThunk(\n    \"contacts/addContact\",\n    async (contact, thunkAPI) => {\n      try {\n        const response = await axios.post(\"/contacts\", contact );\n       \n        return response.data;\n      } catch (err) {\n        return thunkAPI.rejectWithValue(err.message);\n      }\n    }\n  );\n  \n  export const deleteContact = createAsyncThunk(\n    \"contacts/deleteContact\",\n    async (contactId, thunkAPI) => {\n      try {\n        const response = await axios.delete(`/contacts/${contactId}`);\n       \n        return response.data;\n      } catch (err) {\n        return thunkAPI.rejectWithValue(err.message);\n      }\n    }\n  );","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from '../components/ContactList/ContactList'\nimport { ContactForm } from '../components/ContactForm/ContactForm'\nimport {Filter} from '../components/Filter/Filter';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["ContactList","contacts","handleDelete","map","contact","id","name","number","className","css","type","onClick","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","ContactForm","useState","setName","setNumber","dispatch","useDispatch","loginNameId","loginNumberId","onSubmit","event","preventDefault","addContact","nameText","numberText","htmlFor","onChange","value","target","pattern","title","required","selectFilter","state","filter","selectLoading","isLoading","Filter","useSelector","placeholder","e","setFilter","axios","fetchContacts","createAsyncThunk","_","thunkAPI","response","data","rejectWithValue","message","contactId","Phonebook","useEffect","Helmet"],"sourceRoot":""}